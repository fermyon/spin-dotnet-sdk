<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<ItemGroup>
		<WasiNativeFileReference Include="$(MSBuildThisFileDirectory)..\native\host-components.c" />
		<WasiNativeFileReference Include="$(MSBuildThisFileDirectory)..\native\http-trigger.c" />
		<WasiNativeFileReference Include="$(MSBuildThisFileDirectory)..\native\util.c" />
		<WasiNativeFileReference Include="$(MSBuildThisFileDirectory)..\native\spin-http.c" />
		<WasiNativeFileReference Include="$(MSBuildThisFileDirectory)..\native\wasi-outbound-http.c" />
		<WasiAfterRuntimeLoaded Include="spin_attach_internal_calls" />
	</ItemGroup>

	<!-- Wizer is only enabled if the developer explicitly opts in, because it will only work if they have the wizer binary on PATH -->
	<!-- Consider baking wizer into spin itself so that it can generate its own preinitialized version of the .wasm modules during startup -->
	<Target Name="RunWizer" AfterTargets="CopyWasmToOutput" Condition="$(UseWizer) == 'true'">
		<Message Importance="high" Text="Running wizer to preinitialize @(WasiSdkBinOutputFiles)..." />
		<Exec Command="wizer @(WasiSdkBinOutputFiles) -o @(WasiSdkBinOutputFiles).pre.wasm --allow-wasi" />
		<Delete Files="@(WasiSdkBinOutputFiles)" />
		<Move SourceFiles="@(WasiSdkBinOutputFiles->'%(Identity).pre.wasm')" DestinationFiles="@(WasiSdkBinOutputFiles)" />
	</Target>

</Project>
